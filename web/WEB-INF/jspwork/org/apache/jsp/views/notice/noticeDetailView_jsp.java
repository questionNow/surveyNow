/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/8.5.45
 * Generated at: 2019-09-30 07:56:09 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.views.notice;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import notice.model.vo.Notice;
import member.model.vo.Member;

public final class noticeDetailView_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  static {
    _jspx_dependants = new java.util.HashMap<java.lang.String,java.lang.Long>(1);
    _jspx_dependants.put("/views/notice/../common/menubar.jsp", Long.valueOf(1569830157229L));
  }

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = new java.util.HashSet<>();
    _jspx_imports_classes.add("notice.model.vo.Notice");
    _jspx_imports_classes.add("member.model.vo.Member");
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    final java.lang.String _jspx_method = request.getMethod();
    if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method) && !javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET POST or HEAD");
      return;
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html; charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("<!-- 1. -->\r\n");
      out.write("<!-- 20190927  -->\r\n");
      out.write("\r\n");

	Notice n = (Notice)request.getAttribute("notice");

      out.write("\r\n");
      out.write("\r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("<style>\r\n");
      out.write("\t.outer{\r\n");
      out.write("\t\twidth:800px;\r\n");
      out.write("\t\theight:500px;\r\n");
      out.write("\t\tbackground:black;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\tmargin-left:auto;\r\n");
      out.write("\t\tmargin-right:auto;\r\n");
      out.write("\t\tmargin-top:50px;\r\n");
      out.write("\t}\r\n");
      out.write("\ttable{\r\n");
      out.write("\t\tborder:1px solid white;\r\n");
      out.write("\t}\r\n");
      out.write("\t.tableArea{\r\n");
      out.write("\t\twidth:450px;\r\n");
      out.write("\t\theight:350px;\r\n");
      out.write("\t\tmargin-left:auto;\r\n");
      out.write("\t\tmargin-right:auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("</style>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t");
      out.write("\r\n");
      out.write("    \r\n");

	/* LoginServlet.java에서 설정한 세션 정보 사용하기 */
	Member loginUser = (Member)session.getAttribute("loginUser");
	// session의 attribute로써 객체를 끄집어 내면 무조건 Object형이므로 다운캐스팅 해주어야 한다.
	// Member 에러나는데 import 해주면된다.
	// Type mismatch: cannot convert from Object to Member 에러 : 자료형이 object형이라 다운캐스팅 해줘야한다.
	
	//jsp 출력 함수 out.print();
	out.print(loginUser);

      out.write("\r\n");
      out.write("    \r\n");
      out.write("<!DOCTYPE html>\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("<meta charset=\"UTF-8\">\r\n");
      out.write("<script src=\"http://ajax.googleapis.com/ajax/libs/jquery/3.3.1/jquery.min.js\"></script>\r\n");
      out.write("\r\n");
      out.write("<!-- < %@ : 페이지 정보, import 할때 -->\r\n");
      out.write("<!-- < %= : 자바의대한 값들 -->\r\n");
      out.write("\r\n");
      out.write("<!-- <script>\r\n");
      out.write("\t$(function(){\r\n");
      out.write("\t\talert(\"되냐\");\r\n");
      out.write("\t});\r\n");
      out.write("</script> -->\r\n");
      out.write("<style>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\tbody{\r\n");
      out.write("\t\tbackground:url('");
      out.print(request.getContextPath());
      out.write("/images/city1.PNG') no-repeat;\r\n");
      out.write("\t\tbackground-size:cover;\r\n");
      out.write("\t\t/* cover : 화면 전체꽉차게 */\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#loginBtn input, #memberJoinBtn, #logoutBtn, #myPage{\r\n");
      out.write("\t\tdisplay:inline-block; \r\n");
      out.write("\t\tvertical-align:middle;\r\n");
      out.write("\t\ttext-align:center;\r\n");
      out.write("\t\tbackground:orangered;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\theight:25px;\r\n");
      out.write("\t\twidth:100px;\r\n");
      out.write("\t\tborder-radius:5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#memberJoinBtn{\r\n");
      out.write("\t\tbackground:yellowgreen;\r\n");
      out.write("\t}\r\n");
      out.write("\t\r\n");
      out.write("\t#loginBtn:hover, #changeInfo:hover, #logoutBtn:hover, #memberJoinBtn:hover, #myPage:hover{\r\n");
      out.write("\t\tcursor:pointer;\r\n");
      out.write("\t\t/* cursor:pointer : 마우스 올리면 커서모양으로 변경 */\r\n");
      out.write("\t}\r\n");
      out.write("\t.loginArea > form, #userInfo{ \r\n");
      out.write("\t\tfloat:right;\r\n");
      out.write("\t\t/* from 태그가 오른쪽으로 나와라*/\r\n");
      out.write("\t}\r\n");
      out.write("\t#logout, #myPage{\r\n");
      out.write("\t\tbackground:orangered;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\ttext-decoration:none;\r\n");
      out.write("\t\tborder-radius:5px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.wrap{\r\n");
      out.write("\t\tbackground:black;\r\n");
      out.write("\t\twidth:100%;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t}\r\n");
      out.write("\t.menu{\r\n");
      out.write("\t\tbackground:black;\r\n");
      out.write("\t\tcolor:white;\r\n");
      out.write("\t\ttext-align:center;\r\n");
      out.write("\t\tvertical-align:middle;\r\n");
      out.write("\t\twidth:150px;\r\n");
      out.write("\t\theight:50px;\r\n");
      out.write("\t\tdisplay:table-cell; \r\n");
      out.write("\t\t/* display:table-cell : <td>속성처럼 만들어 줌 */\r\n");
      out.write("\t}\r\n");
      out.write("\t.nav{\r\n");
      out.write("\t\twidth:600px;\r\n");
      out.write("\t\tmargin-left:auto;\r\n");
      out.write("\t\tmargin-right:auto;\r\n");
      out.write("\t}\r\n");
      out.write("\t.menu:hover{\r\n");
      out.write("\t\tbackground:darkgray;\r\n");
      out.write("\t\tcolor:orangered;\r\n");
      out.write("\t\tfont-wight:bold; \r\n");
      out.write("\t\tcursor:pointer;\r\n");
      out.write("\t}\r\n");
      out.write("</style>\r\n");
      out.write("<title>Insert title here</title>\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h1 align = \"center\">Welcome JSP World!</h1>\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t<div class = \"loginArea\">\t\t\t\t\t\t\t\t<!-- /login.me : Servlet을 찾아감 -->\r\n");
      out.write("\t\r\n");
      out.write("\t");
if(loginUser == null) {
      out.write("\r\n");
      out.write("\t\t<form id =\"loginForm\" action=\"");
      out.print(request.getContextPath());
      out.write("/login.me\" \r\n");
      out.write("\t\tonsubmit=\"return validate()\" method=\"post\"> <!-- validate() 을 실행하고 난뒤의 반환값(return) -->\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label>ID : </label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"text\" name=\"userId\" id = \"userId\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td><label>PWD : </label></td>\r\n");
      out.write("\t\t\t\t\t<td><input type=\"password\" name=\"userPwd\" id = \"userPwd\"></td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t<td colspan=\"2\">\r\n");
      out.write("\t\t\t\t\t\t<input type=\"checkbox\" name=\"saveId\" id = \"saveId\">&nbsp;\r\n");
      out.write("\t\t\t\t\t\t<label for=\"saveId\">아이디 저장</label>\r\n");
      out.write("\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t</tr>\r\n");
      out.write("\t\t\t</table>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t<div class=\"btns\" align=\"center\">\r\n");
      out.write("\t\t\t\t<div id=\"memberJoinBtn\" onclick = \"memberJoin();\">회원가입</div>\r\n");
      out.write("\t\t\t\t<div id=\"loginBtn\"><input type=\"submit\" value=\"로그인\"></div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t</form>\r\n");
      out.write("\t");
} else{
      out.write("\r\n");
      out.write("\t\t<div id =\"userInfo\">\r\n");
      out.write("\t\t\t<label>");
      out.print(loginUser.getUserName() );
      out.write("님의 방문을 환영합니다.</label>\r\n");
      out.write("\t\t\t<div class=\"btns\" align=\"right\">\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- request.getContextPath() 동일한 의미 : /jspProject/\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t/jspProject/ : Context루트명 -->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- 쿼리스트링 방식 : /jspProject/mypage.me?userId=loginUser.getUserId() \r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t- ? 이후를 쿼리스트링 이라 한다.\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t- 어떤이름?어떤값\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t\t- mypage.me : 클래스파일을 의미 classes 밑에 MyPageServlet.class 자동으로 찾아감\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t-->\r\n");
      out.write("\t\t\t\t\t\t\t\t\t\t\t<!-- @조사필요 쿼리스트림 방식-->\r\n");
      out.write("\t\t\t\t<div id=\"myPage\" onclick=\"location.href='/jspProject/mypage.me?userId=");
      out.print(loginUser.getUserId());
      out.write("'\">정보수정</div>\r\n");
      out.write("\t\t\t\t<div id=\"logoutBtn\" onclick=\"logout()\">로그아웃</div>\r\n");
      out.write("\t\t\t</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t");
} 
      out.write("\r\n");
      out.write("\t</div>\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\t// validate() 함수 작성하기(form태그가 submit되었을 때 실행됨)\r\n");
      out.write("\t\tfunction validate(){\r\n");
      out.write("\t\t\tif($(\"#userId\").val().trim().length ==0){\r\n");
      out.write("\t\t\t\talert(\"아이디를 입력하세요\");\r\n");
      out.write("\t\t\t\t$(\"#userId\").focus();\r\n");
      out.write("\t\t\t\t\r\n");
      out.write("\t\t\t\treturn false; // return값이 false이면 submit이 되지 않는다.\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\tif($(\"#userPwd\").val().trim().length==0){\r\n");
      out.write("\t\t\t\talert(\"비밀번호를 입력하세요\");\r\n");
      out.write("\t\t\t\t$(\"#userPwd\").focus();\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t\treturn false;\r\n");
      out.write("\t\t\t}\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\treturn true;\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// logout() 함수 작성하기\r\n");
      out.write("\t\tfunction logout(){\r\n");
      out.write("\t\t\tlocation.href = '");
      out.print(request.getContextPath());
      out.write("/logout.me';\r\n");
      out.write("\t\t\t\r\n");
      out.write("\t\t\t// LogoutServlet 만들기~ 꼬꼬씽~\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 회원가입용 함수 memberJoin() 함수 작성하기\r\n");
      out.write("\t\tfunction memberJoin(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/views/member/memberJoinForm.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\t<!-- 메뉴 만들기 -->\r\n");
      out.write("\t<br clear=\"both\"> <!-- 이전 float:right; float속성을 제거해주자(이후 나올 태그들은 float속성이 안먹게 -->\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<div class=\"wrap\">\r\n");
      out.write("\t\t<div class=\"nav\">\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goHome();\">HOME</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goNotice();\">공지사항</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goBoard();\">게시판</div>\r\n");
      out.write("\t\t\t<div class=\"menu\" onclick=\"goThumbnail();\">사진게시판</div>\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("\r\n");
      out.write("\t\r\n");
      out.write("\t<script>\r\n");
      out.write("\t\tfunction goHome(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/index.jsp\";\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 공지사항 작업 시작!(회원 관련된 작업이 끝나면)\r\n");
      out.write("\t\tfunction goNotice(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/list.no\";\r\n");
      out.write("\t\t\t// NoticeListServlet 만들기\r\n");
      out.write("\t\t}\r\n");
      out.write("\t\t\r\n");
      out.write("\t\t// 게시판 작업 시작(공지사항 관련된 작업이 끝나면)\r\n");
      out.write("\t\tfunction goBoard(){\r\n");
      out.write("\t\t\tlocation.href=\"");
      out.print(request.getContextPath());
      out.write("/list.bo\"\r\n");
      out.write("\t\t\t//BoardListServlet.java 만들기\r\n");
      out.write("\t\t}\r\n");
      out.write("\t</script>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</body>\r\n");
      out.write("</html>");
      out.write("\r\n");
      out.write("\t<div class=\"outer\">\r\n");
      out.write("\t\t<br>\r\n");
      out.write("\t\t<h2 align=\"center\">공지사항 상세보기</h2>\r\n");
      out.write("\t\t<div class=\"tableArea\">\r\n");
      out.write("\t\t\t<!-- noticeInsertForm.jsp에서 table 부분 복사해와서 value 값 적용하자 -->\r\n");
      out.write("\t\t\t<table>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>제목</td>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"3\"><input type=\"text\" size=\"50\" name=\"title\" value=\"");
      out.print(n.getnTitle() );
      out.write("\" readonly></td>\r\n");
      out.write("\t\t\t\t\t</tr>\t\t\t\t\t\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>작성자</td>\r\n");
      out.write("\t\t\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t\t\t<input type=\"text\" name=\"writer\" value=\"");
      out.print(n.getnWriter() );
      out.write("\" readonly>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t\t<td>작성일</td>\r\n");
      out.write("\t\t\t\t\t\t<td><input type=\"date\" name=\"date\" value=\"");
      out.print(n.getnDate() );
      out.write("\" readonly></td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td>내용</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t\t<tr>\r\n");
      out.write("\t\t\t\t\t\t<td colspan=\"4\">\r\n");
      out.write("\t\t\t\t\t\t\t");
      out.write("\r\n");
      out.write("\t\t\t\t\t\t\t<!-- textarea 태그에서 조회시 태그 안에 넣어야한다. / 뽑은때 완느 다르네? -->\r\n");
      out.write("\t\t\t\t\t\t\t<textarea name=\"content\" cols=\"60\" rows=\"15\" style=\"resize:none\" readonly>");
      out.print(n.getnContent() );
      out.write("</textarea>\r\n");
      out.write("\t\t\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t\t</tr>\r\n");
      out.write("\t\t\t\t</table>\r\n");
      out.write("\t\t\t\t<br>\r\n");
      out.write("\t\t\t\t<div align=\"center\">\r\n");
      out.write("\t\t\t\t\t<button type=\"reset\" onclick=\"location.href='");
      out.print( request.getContextPath());
      out.write("/list.do'\">메뉴로 돌아가즈아!</button>\r\n");
      out.write("\t\t\t\t\t<!-- 로그인한 사람인 관리자인지 판별 -->\r\n");
      out.write("\t\t\t\t\t");
if(loginUser != null && loginUser.getUserId().equals("admin")) {
      out.write("\r\n");
      out.write("\t\t\t\t\t\t<button type=\"submit\" onclick=\"location.href='");
      out.print(request.getContextPath());
      out.write("/updateView.no?no=");
      out.print(n.getnNo());
      out.write("'\">수정하즈아!</button>\r\n");
      out.write("\t\t\t\t\t");
} 
      out.write("\r\n");
      out.write("\t\t\t\t</div>\r\n");
      out.write("\t\t\t\t<!--  NoticeUpdateViewServlet 만들러 꼬꼬씽!! -->\r\n");
      out.write("\t\t</div>\r\n");
      out.write("\t</div>\r\n");
      out.write("</body>\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("</html>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
